/////////////////////////////////////////////////////////////////
// ScoreType.h
//
// Routines for doing math operations in MSAPROBS
/////////////////////////////////////////////////////////////////

#ifndef SCORETYPE_H
#define SCORETYPE_H

#include <cmath>
#include <algorithm>
#include <cfloat>
#include <assert.h>

typedef float ScoreType;

const float LOG_ZERO = -2e20;
const float LOG_ONE = 0.0;

/////////////////////////////////////////////////////////////////
// LOG()
//
// Compute the logarithm of x.
/////////////////////////////////////////////////////////////////

inline ScoreType LOG(ScoreType x)
{
    return log(x);
}

/////////////////////////////////////////////////////////////////
// EXP()
//
// Computes exp(x).
/////////////////////////////////////////////////////////////////

inline ScoreType EXP(ScoreType x)
{
    //return exp(x);
    if (x > -2)
    {
        if (x > -0.5)
        {
            if (x > 0)
                return exp(x);
            return (((0.03254409303190190000 * x + 0.16280432765779600000) * x
                     + 0.49929760485974900000) * x + 0.99995149601363700000) * x
                   + 0.99999925508501600000;
        }
        if (x > -1)
            return (((0.01973899026052090000 * x + 0.13822379685007000000) * x
                     + 0.48056651562365000000) * x + 0.99326940370383500000) * x
                   + 0.99906756856399500000;
        return (((0.00940528203591384000 * x + 0.09414963667859410000) * x
                 + 0.40825793595877300000) * x + 0.93933625499130400000) * x
               + 0.98369508190545300000;
    }
    if (x > -8)
    {
        if (x > -4)
            return (((0.00217245711583303000 * x + 0.03484829428350620000) * x
                     + 0.22118199801337800000) * x + 0.67049462206469500000) * x
                   + 0.83556950223398500000;
        return (((0.00012398771025456900 * x + 0.00349155785951272000) * x
                 + 0.03727721426017900000) * x + 0.17974997741536900000) * x
               + 0.33249299994217400000;
    }
    if (x > -16)
        return (((0.00000051741713416603 * x + 0.00002721456879608080) * x
                 + 0.00053418601865636800) * x + 0.00464101989351936000) * x
               + 0.01507447981459420000;
    return 0;
}

/*
 /////////////////////////////////////////////////////////////////
 // LOOKUP()
 //
 // Computes log (exp (x) + 1), for 0 <= x <= 7.5.
 /////////////////////////////////////////////////////////////////

 inline ScoreType LOOKUP (ScoreType x){
 //return log (exp(x) + 1);
 if (x < 2){
 if (x < 0.5){
 if (x < 0)
 return log (exp(x) + 1);
 return (((-0.00486373205785640000*x - 0.00020245408813934800)*x + 0.12504222666029800000)*x + 0.49999685320563000000)*x + 0.69314723138948900000;
 }
 if (x < 1)
 return (((-0.00278634205460548000*x - 0.00458097251248546000)*x + 0.12865849880472500000)*x + 0.49862228499205200000)*x + 0.69334810088688000000;
 return (((0.00059633755154209200*x - 0.01918996666063320000)*x + 0.15288232492093800000)*x + 0.48039958825756900000)*x + 0.69857578503189200000;
